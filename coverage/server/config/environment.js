/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['config/environment.js']) {
  _$jscoverage['config/environment.js'] = [];
  _$jscoverage['config/environment.js'][1] = 0;
  _$jscoverage['config/environment.js'][3] = 0;
  _$jscoverage['config/environment.js'][5] = 0;
  _$jscoverage['config/environment.js'][7] = 0;
  _$jscoverage['config/environment.js'][9] = 0;
  _$jscoverage['config/environment.js'][11] = 0;
  _$jscoverage['config/environment.js'][13] = 0;
  _$jscoverage['config/environment.js'][15] = 0;
  _$jscoverage['config/environment.js'][17] = 0;
  _$jscoverage['config/environment.js'][19] = 0;
  _$jscoverage['config/environment.js'][21] = 0;
  _$jscoverage['config/environment.js'][22] = 0;
  _$jscoverage['config/environment.js'][23] = 0;
  _$jscoverage['config/environment.js'][24] = 0;
  _$jscoverage['config/environment.js'][29] = 0;
  _$jscoverage['config/environment.js'][33] = 0;
  _$jscoverage['config/environment.js'][36] = 0;
  _$jscoverage['config/environment.js'][38] = 0;
  _$jscoverage['config/environment.js'][39] = 0;
  _$jscoverage['config/environment.js'][40] = 0;
  _$jscoverage['config/environment.js'][41] = 0;
  _$jscoverage['config/environment.js'][46] = 0;
  _$jscoverage['config/environment.js'][47] = 0;
  _$jscoverage['config/environment.js'][49] = 0;
  _$jscoverage['config/environment.js'][50] = 0;
  _$jscoverage['config/environment.js'][51] = 0;
  _$jscoverage['config/environment.js'][53] = 0;
  _$jscoverage['config/environment.js'][54] = 0;
  _$jscoverage['config/environment.js'][55] = 0;
  _$jscoverage['config/environment.js'][56] = 0;
  _$jscoverage['config/environment.js'][57] = 0;
  _$jscoverage['config/environment.js'][58] = 0;
  _$jscoverage['config/environment.js'][59] = 0;
  _$jscoverage['config/environment.js'][60] = 0;
  _$jscoverage['config/environment.js'][61] = 0;
  _$jscoverage['config/environment.js'][63] = 0;
}
_$jscoverage['config/environment.js'][1]++;
var CLIENT_BUILD_PATH, CLIENT_RELEASE_PATH, CLIENT_SOURCE_PATH, CLIENT_VIEWS_PATH, coffee, connect, express, nib, stylus;
_$jscoverage['config/environment.js'][3]++;
connect = require("connect");
_$jscoverage['config/environment.js'][5]++;
express = require("express");
_$jscoverage['config/environment.js'][7]++;
coffee = require("connect-coffee-script");
_$jscoverage['config/environment.js'][9]++;
stylus = require("stylus");
_$jscoverage['config/environment.js'][11]++;
nib = require("nib");
_$jscoverage['config/environment.js'][13]++;
CLIENT_SOURCE_PATH = "src/client";
_$jscoverage['config/environment.js'][15]++;
CLIENT_VIEWS_PATH = "src/client/views";
_$jscoverage['config/environment.js'][17]++;
CLIENT_BUILD_PATH = "build/public";
_$jscoverage['config/environment.js'][19]++;
CLIENT_RELEASE_PATH = "release/public";
_$jscoverage['config/environment.js'][21]++;
module.exports = (function (app) {
  _$jscoverage['config/environment.js'][22]++;
  var setupDevelopmentEnvironment;
  _$jscoverage['config/environment.js'][23]++;
  setupDevelopmentEnvironment = (function () {
  _$jscoverage['config/environment.js'][24]++;
  app.use(coffee({src: CLIENT_SOURCE_PATH, dest: CLIENT_BUILD_PATH, bare: true}));
  _$jscoverage['config/environment.js'][29]++;
  app.use(stylus.middleware({src: CLIENT_SOURCE_PATH, dest: CLIENT_BUILD_PATH, compile: (function (str, path) {
  _$jscoverage['config/environment.js'][33]++;
  return stylus(str).set("filename", path).set("warn", true).set("compress", false).use(nib());
})}));
  _$jscoverage['config/environment.js'][36]++;
  return app.use(express["static"](CLIENT_BUILD_PATH));
});
  _$jscoverage['config/environment.js'][38]++;
  app.configure("development", (function () {
  _$jscoverage['config/environment.js'][39]++;
  setupDevelopmentEnvironment();
  _$jscoverage['config/environment.js'][40]++;
  app.use(express.logger("development"));
  _$jscoverage['config/environment.js'][41]++;
  return app.use(express.errorHandler({dumpExceptions: true, showStack: true}));
}));
  _$jscoverage['config/environment.js'][46]++;
  app.configure("test", (function () {
  _$jscoverage['config/environment.js'][47]++;
  return setupDevelopmentEnvironment();
}));
  _$jscoverage['config/environment.js'][49]++;
  app.configure("production", (function () {
  _$jscoverage['config/environment.js'][50]++;
  app.use(express["static"](CLIENT_RELEASE_PATH));
  _$jscoverage['config/environment.js'][51]++;
  return app.use(connect.compress());
}));
  _$jscoverage['config/environment.js'][53]++;
  app.configure((function () {
  _$jscoverage['config/environment.js'][54]++;
  app.set("view engine", "jade");
  _$jscoverage['config/environment.js'][55]++;
  app.set("views", CLIENT_VIEWS_PATH);
  _$jscoverage['config/environment.js'][56]++;
  app.use(express.favicon());
  _$jscoverage['config/environment.js'][57]++;
  app.use(express.bodyParser());
  _$jscoverage['config/environment.js'][58]++;
  app.use(express.methodOverride());
  _$jscoverage['config/environment.js'][59]++;
  app.use(express.cookieParser("your secret here"));
  _$jscoverage['config/environment.js'][60]++;
  app.use(express.session());
  _$jscoverage['config/environment.js'][61]++;
  return app.use(app.router);
}));
  _$jscoverage['config/environment.js'][63]++;
  return app;
});
_$jscoverage['config/environment.js'].source = ["var CLIENT_BUILD_PATH, CLIENT_RELEASE_PATH, CLIENT_SOURCE_PATH, CLIENT_VIEWS_PATH, coffee, connect, express, nib, stylus;","","connect = require(\"connect\");","","express = require(\"express\");","","coffee = require(\"connect-coffee-script\");","","stylus = require(\"stylus\");","","nib = require(\"nib\");","","CLIENT_SOURCE_PATH = \"src/client\";","","CLIENT_VIEWS_PATH = \"src/client/views\";","","CLIENT_BUILD_PATH = \"build/public\";","","CLIENT_RELEASE_PATH = \"release/public\";","","module.exports = function(app) {","  var setupDevelopmentEnvironment;","  setupDevelopmentEnvironment = function() {","    app.use(coffee({","      src: CLIENT_SOURCE_PATH,","      dest: CLIENT_BUILD_PATH,","      bare: true","    }));","    app.use(stylus.middleware({","      src: CLIENT_SOURCE_PATH,","      dest: CLIENT_BUILD_PATH,","      compile: function(str, path) {","        return stylus(str).set(\"filename\", path).set(\"warn\", true).set(\"compress\", false).use(nib());","      }","    }));","    return app.use(express[\"static\"](CLIENT_BUILD_PATH));","  };","  app.configure(\"development\", function() {","    setupDevelopmentEnvironment();","    app.use(express.logger(\"development\"));","    return app.use(express.errorHandler({","      dumpExceptions: true,","      showStack: true","    }));","  });","  app.configure(\"test\", function() {","    return setupDevelopmentEnvironment();","  });","  app.configure(\"production\", function() {","    app.use(express[\"static\"](CLIENT_RELEASE_PATH));","    return app.use(connect.compress());","  });","  app.configure(function() {","    app.set(\"view engine\", \"jade\");","    app.set(\"views\", CLIENT_VIEWS_PATH);","    app.use(express.favicon());","    app.use(express.bodyParser());","    app.use(express.methodOverride());","    app.use(express.cookieParser(\"your secret here\"));","    app.use(express.session());","    return app.use(app.router);","  });","  return app;","};"];
